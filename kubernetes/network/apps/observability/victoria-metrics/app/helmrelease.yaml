---
# yaml-language-server: $schema=https://github.com/fluxcd-community/flux2-schemas/raw/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: victoria-metrics
spec:
  interval: 30m
  chart:
    spec:
      chart: victoria-metrics-k8s-stack
      version: 0.23.2
      sourceRef:
        kind: HelmRepository
        name: victoria-metrics
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    fullnameOverride: victoria-metrics

    # VM Operator deployment
    victoria-metrics-operator:
      enabled: true
      operator:
        disable_prometheus_converter: false # Ensure we keep enabled the converter to sync prom rules to VM rules
        enable_converter_ownership: true # Required to allow VM to remove VM rules it imports if a prometheus rule is deleted

    # Single-binary vm cluster
    vmsingle:
      enabled: false

    # VM Alerting (however, this just watches & passes alerts to alertmanager)
    vmalert:
      enabled: false

    # VM Data scraping
    vmagent:
      enabled: true
      spec:
        replicaCount: 1
        shardCount: 2
        scrapeInterval: 30s
        externalLabels:
          cluster: network
        remoteWrite:
            - url: http://${VICTORIA_METRICS_IPV4}:8429/api/v1/write
        resources:
          requests:
            cpu: 50m
            memory: 256Mi
          limits:
            cpu: 400m
            memory: 512Mi
        topologySpreadConstraints:
          - maxSkew: 1
            topologyKey: kubernetes.io/hostname
            whenUnsatisfiable: DoNotSchedule
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: vmagent
      ingress:
        enabled: true
        ingressClassName: internal
        hosts:
          - vmagent-network.${CLUSTER_DOMAIN}

    # Extra slack templates
    monzoTemplate:
      enabled: false

    # Scrape configs
    kubelet:
      enabled: true
      spec:
        interval: 30s
        # drop high cardinality label and useless metrics for cadvisor and kubelet
        metricRelabelConfigs:
          - action: labeldrop
            regex: (uid|pod_uid|id)
          - action: labeldrop
            regex: (name)
          - action: drop
            source_labels: [__name__]
            regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)
          - action: drop
            source_labels: [__name__]
            regex: (container_tasks_state|container_memory_failures_total)
          - action: drop
            source_labels: [__name__]
            regex: (container_blkio_device_usage_total)
          - action: drop
            source_labels: [__name__]
            regex: (prober_probe_duration_seconds_bucket)
        relabelConfigs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - sourceLabels: [__metrics_path__]
            targetLabel: metrics_path
          - targetLabel: "job"
            replacement: "kubelet"
    kubeApiServer:
      enabled: true
      spec:
        interval: 30s
        endpoints:
          - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
            port: https
            scheme: https
            tlsConfig:
              caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              servername: kubernetes
            metricRelabelings:
              # Remove duplicate labels provided by k3s
              - action: keep
                sourceLabels: ["__name__"]
                regex: (aggregator_openapi|aggregator_unavailable|apiextensions_openapi|apiserver_admission|apiserver_audit|apiserver_cache|apiserver_cel|apiserver_client|apiserver_crd|apiserver_current|apiserver_envelope|apiserver_flowcontrol|apiserver_init|apiserver_kube|apiserver_longrunning|apiserver_request|apiserver_requested|apiserver_response|apiserver_selfrequest|apiserver_storage|apiserver_terminated|apiserver_tls|apiserver_watch|apiserver_webhooks|authenticated_user|authentication|disabled_metric|etcd_bookmark|etcd_lease|etcd_request|field_validation|get_token|go|grpc_client|hidden_metric|kube_apiserver|kubernetes_build|kubernetes_feature|node_authorizer|pod_security|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|registered_metric|rest_client|scrape_duration|scrape_samples|scrape_series|serviceaccount_legacy|serviceaccount_stale|serviceaccount_valid|watch_cache|workqueue)_(.+)
              # Drop high cardinality labels
              - action: drop
                sourceLabels: ["__name__"]
                regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
              - action: drop
                sourceLabels: ["__name__"]
                regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)
    kubeControllerManager:
      enabled: true
      endpoints: &cp
        - 192.168.20.33
        - 192.168.20.34
        - 192.168.20.35
      spec:
        endpoints:
          - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
            port: http-metrics
            scheme: https
            tlsConfig:
              caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              serverName: kubernetes
              insecureSkipVerify: true
            metricRelabelings:
              # Remove duplicate labels provided by k3s
              - action: keep
                sourceLabels: ["__name__"]
                regex: "(apiserver_audit|apiserver_client|apiserver_delegated|apiserver_envelope|apiserver_storage|apiserver_webhooks|attachdetach_controller|authenticated_user|authentication|cronjob_controller|disabled_metric|endpoint_slice|ephemeral_volume|garbagecollector_controller|get_token|go|hidden_metric|job_controller|kubernetes_build|kubernetes_feature|leader_election|node_collector|node_ipam|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|pv_collector|registered_metric|replicaset_controller|rest_client|retroactive_storageclass|root_ca|running_managed|scrape_duration|scrape_samples|scrape_series|service_controller|storage_count|storage_operation|ttl_after|volume_operation|workqueue)_(.+)"
              - action: drop
                sourceLabels: ["__name__"]
                regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)
    kubeProxy:
      enabled: false
    kubeScheduler:
      enabled: true
      endpoints: *cp
      spec:
        endpoints:
          - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
            port: http-metrics
            scheme: https
            tlsConfig:
              insecureSkipVerify: true
            metricRelabelings:
              # Remove duplicate labels provided by k3s
              - action: keep
                sourceLabels: ["__name__"]
                regex: "(apiserver_audit|apiserver_client|apiserver_delegated|apiserver_envelope|apiserver_storage|apiserver_webhooks|authenticated_user|authentication|disabled_metric|go|hidden_metric|kubernetes_build|kubernetes_feature|leader_election|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|registered_metric|rest_client|scheduler|scrape_duration|scrape_samples|scrape_series|workqueue)_(.+)"
              - action: drop
                sourceLabels: ["__name__"]
                regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)
    kubeEtcd:
      enabled: true
      endpoints: *cp
      service:
        enabled: true
        port: 2381
        targetPort: 2381
      spec:
        endpoints:
          - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
            port: http-metrics
            metricRelabelConfigs:
              - action: drop
                sourceLabels: ["__name__"]
                regex: "(etcd_request_duration_seconds_bucket|etcd_request_duration_seconds_sum|etcd_request_duration_seconds_count)"

    # Enable deployment of kube-state-metrics
    kube-state-metrics:
      enabled: false

    # Enable deployment of prometheus-node-exporter
    prometheus-node-exporter:
      enabled: false

    # Enable deployment of grafana
    defaultDashboardsEnabled: false
    grafana:
      enabled: false

    # Enable deployment of alertmanager
    alertmanager:
      enabled: false

    # Prepared sets of default rules
    # Adjust to what scraping functions you have enabled
    # i.e. if you dont have kubeapisever setup & enabled, disable
    #   the kubeApiserver rules below
    #
    # There's no vmsingle on the network cluster, therefore nothing to process these rules
    defaultRules:
      create: false
