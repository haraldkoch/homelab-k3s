---
# yaml-language-server: $schema=https://kubernetes-schemas.haraldkoch.ca/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: postgres-backup
  namespace: dbms
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: cronjob
      cronjob:
        concurrencyPolicy: Forbid
        schedule: "0 17 * * *"
    restartPolicy: OnFailure
    image:
      repository: docker.io/prodrigestivill/postgres-backup-local
      tag: 15@sha256:7f12039af361b71c987ad06b5c0a9dca67bad92f10bffa5012a614311363eebb
    command:
      - /bin/bash
      - -x
      - /backup.sh
    env:
      - { name: TZ, value: "${TIMEZONE}" }
      - { name: POSTGRES_DB, value: "authelia,gatus,grafana,immich,miniflux,nextcloud,outline" }
      - { name: POSTGRES_HOST, value: "kochhaus-v15-ro.dbms.svc.cluster.local" }
      - { name: POSTGRES_PORT, value: 5432 }
      - name: POSTGRES_USER
        valueFrom:
          secretKeyRef:
            name: cloudnative-pg-secret
            key: username
      - name: POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            name: cloudnative-pg-secret
            key: password
    service:
      main:
        enabled: false
    persistence:
      nas:
        enabled: true
        type: nfs
        server: ${SECRET_BACKUP_SERVER}
        path: /backup/data/k8s/postgres
        mountPath: /backups
    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
