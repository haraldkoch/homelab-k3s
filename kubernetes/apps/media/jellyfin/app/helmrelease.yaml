---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: jellyfin
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: intel-device-plugin-gpu
      namespace: system
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: volsync
  values:
    controllers:
      main:
        type: statefulset
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/jellyfin
              tag: 10.8.11@sha256:041977cb09d964ed4e00dec2bd0af3208f0121b8385a69617d30657596ffa292
            env:
              DOTNET_SYSTEM_IO_DISABLEFILELOCKING: "true"
              JELLYFIN_FFmpeg__probesize: 50000000
              JELLYFIN_FFmpeg__analyzeduration: 50000000
              JELLYFIN_PublishedServerUrl: &loadBalancerIP ${SVC_JELLYFIN_ADDR_V4}
              TZ: ${TIMEZONE}
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: 8096
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 100m
                memory: 1000Mi
              limits:
                gpu.intel.com/i915: 1
                memory: 4000Mi
        pod:
          securityContext:
            runAsUser: 2000
            runAsGroup: 2000
            fsGroup: 2000
            fsGroupChangePolicy: OnRootMismatch
          nodeSelector:
            node-role.kubernetes.io/worker: "true"
            intel.feature.node.kubernetes.io/gpu: "true"
        statefulset:
          volumeClaimTemplates:
            - name: config
              accessMode: ReadWriteOnce
              size: 50Gi
              storageClass: ceph-block
    service:
      main:
        type: LoadBalancer
        externalIPs:
          - *loadBalancerIP
        externalTrafficPolicy: Cluster
        ports:
          http:
            port: 8096
    # serviceMonitor:
    #   main:
    #     enabled: true
    ingress:
      main:
        enabled: true
        className: nginx
        hosts:
          - host: &host "{{ .Release.Name }}.${CLUSTER_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      media:
        existingClaim: media-nfs
      transcode:
        enabled: true
        type: emptyDir
