---
# yaml-language-server: $schema=https://github.com/fluxcd-community/flux2-schemas/raw/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app miniflux
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/haraldkoch/postgres-init
              tag: 15.5@sha256:8f464a74b6262a28838f22e06d06a6a6c33c942b36a987a256cb52c05209aa00
            envFrom: &envFrom
              - secretRef:
                  name: miniflux-secret
        containers:
          main:
            image:
              repository: ghcr.io/miniflux/miniflux
              tag: 2.0.50
            env:
              BASE_URL: https://miniflux.${CLUSTER_DOMAIN}
              CREATE_ADMIN: "1"
              DEBUG: "1"
              LOG_DATE_TIME: "1"
              METRICS_ALLOWED_NETWORKS: "${NETWORK_K8S_POD_CIDR}"
              METRICS_COLLECTOR: "1"
              OAUTH2_CLIENT_ID: miniflux
              OAUTH2_USER_CREATION: "1"
              OAUTH2_OIDC_DISCOVERY_ENDPOINT: "https://auth.${CLUSTER_DOMAIN}"
              OAUTH2_PROVIDER: oidc
              OAUTH2_REDIRECT_URL: "https://miniflux.${CLUSTER_DOMAIN}/oauth2/oidc/callback"
              POLLING_SCHEDULER: entry_frequency
              POLLING_FREQUENCY: "15"
              RUN_MIGRATIONS: "1"
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthcheck
                    port: 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 10m
                memory: 64Mi
              limits:
                memory: 256Mi
        pod:
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app
    service:
      main:
        ipFamilyPolicy: PreferDualStack
        ports:
          http:
            port: 8080
    serviceMonitor:
      main:
        enabled: true
    ingress:
      main:
        enabled: true
        className: nginx
        annotations:
          hajimari.io/icon: mdi:rss
        hosts:
          - host: &host "{{ .Release.Name }}.${CLUSTER_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
