expose:
  tls:
    certSource: none
  ingress:
    hosts:
      core: harbor.${SECRET_DOMAIN}
    annotations:
      # cert-manager.io/cluster-issuer: "letsencrypt-production"
      traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
  clusterIP:
    # Annotations on the ClusterIP service
    annotations:
      traefik.ingress.kubernetes.io/buffering: |
        # 2GiB
        maxrequestbodybytes: 2147483648
        # 64MiB
        memrequestbodybytes: 67108864

externalURL: https://harbor.${SECRET_DOMAIN}

harborAdminPassword: "${SECRET_HARBOR_ADMIN_PASSWORD}"

# The secret key used for encryption. Must be a string of 16 chars.
secretKey: "${SECRET_HARBOR_ENCRPYTION_KEY}"

metrics:
  enabled: true
  serviceMonitor:
    enabled: true

# pin everything to amd64 for now
portal:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                  - "amd64"

core:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                  - "amd64"

jobservice:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                  - "amd64"

registry:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                  - "amd64"

chartmuseum:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                  - "amd64"

trivy:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                  - "amd64"

notary:
  enabled: false

database:
  internal:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - "amd64"

redis:
  internal:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - "amd64"

exporter:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                  - "amd64"
