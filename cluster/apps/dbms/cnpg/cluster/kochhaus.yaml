---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: kochhaus
  namespace: dbms
  annotations:
    kyverno.io/ignore: "true"
spec:
  instances: 3

  bootstrap:
    recovery:
      source: kochhaus

  # postgres does not like multi-arch clusters, and some of our postgres clients do not work on arm64
  affinity:
    nodeSelector:
      kubernetes.io/arch: amd64

  # Example of rolling update strategy:
  # - unsupervised: automated update of the primary once all
  #                 replicas have been upgraded (default)
  # - supervised: requires manual supervision to perform
  #               the switchover of the primary
  primaryUpdateStrategy: unsupervised

  # Require 10Gi of space
  storage:
    storageClass: ceph-block
    size: 10Gi

  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 250m
      memory: 640Mi

  monitoring:
    enablePodMonitor: true

  backup:
    retentionPolicy: "30d"
    barmanObjectStore:
      destinationPath: s3://cnpg/v2
      endpointURL: http://${SECRET_BACKUP_SERVER}:9000
      wal:
        compression: bzip2
      s3Credentials:
        accessKeyId:
          name: cnpg-backup
          key: ACCESS_KEY_ID
        secretAccessKey:
          name: cnpg-backup
          key: ACCESS_SECRET_KEY

  externalClusters:
    - name: kochhaus
      barmanObjectStore:
        destinationPath: s3://cnpg/v1
        endpointURL: http://${SECRET_BACKUP_SERVER}:9000
        s3Credentials:
          accessKeyId:
            name: cnpg-backup
            key: ACCESS_KEY_ID
          secretAccessKey:
            name: cnpg-backup
            key: ACCESS_SECRET_KEY
        wal:
          compression: bzip2
          maxParallel: 8
