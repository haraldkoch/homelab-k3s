---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 37.1.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5

  values:
    fullnameOverride: kps

    global:
      rbac:
        pspEnabled: false

    server:
      resources:
        requests:
          memory: 1500Mi
          cpu: 1
        limits:
          memory: 4000Mi

    alertmanager:
      config:
        receivers:
          - name: "null"
          - name: "discord"
            webhook_configs:
              - url: "http://alertmanager-discord:9094"
                send_resolved: true
        route:
          group_by: ["alertname", "job"]
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 6h
          receiver: "discord"
          routes:
            - receiver: "null"
              matchers:
                - alertname =~ "InfoInhibitor|Watchdog"
            - receiver: "discord"
              matchers:
                # - severity =~ critical|warning
                - severity = critical
              continue: true

      ingress:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          hajimari.io/appName: "alertmanager"
          hajimari.io/enable: "true"
          hajimari.io/icon: "alarm-light-outline"
        hosts:
          - alertmanager.${SECRET_INTERNAL_DOMAIN}
        paths:
          - /
        pathType: ImplementationSpecific
        tls:
          - hosts:
              - alertmanager.${SECRET_INTERNAL_DOMAIN}
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: "zfs-block"
              resources:
                requests:
                  storage: 10Mi

    grafana:
      enabled: false

    nodeExporter:
      enabled: false

    prometheus:
      ingress:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          hajimari.io/appName: "prometheus"
          hajimari.io/enable: "true"
          hajimari.io/icon: "chart-line"
        hosts:
          - prometheus.${SECRET_INTERNAL_DOMAIN}
        paths:
          - /
        pathType: ImplementationSpecific
        tls:
          - hosts:
              - prometheus.${SECRET_INTERNAL_DOMAIN}

      prometheusSpec:
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false

        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: zfs-block
              resources:
                requests:
                  storage: 20Gi

        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: ${SECRET_INTERNAL_DOMAIN}/prometheus
                      operator: In
                      values:
                        - "true"

    # cannot be monitored in k3s; runs on localhost
    kubeControllerManager:
      enabled: false
    kubeScheduler:
      enabled: false

    # we now have an etcd instance
    kubeEtcd:
      enabled: true

    defaultRules:
      rules:
        etcd: true
        kubeProxy: false
