---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 45.0.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    fullnameOverride: kps
    alertmanager:
      config:
        receivers:
          - name: heartbeat
            webhook_configs:
              - url: "https://hc-ping.com/${SECRET_ALERTMANAGER_HEALTHCHECKS_TOKEN}"
                send_resolved: true
          - name: "null" # quote
          - name: discord
            webhook_configs:
              - url: "http://alertmanager-discord:9094"
                send_resolved: true
        route:
          group_by: ["alertname", "job"]
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 6h
          receiver: discord
          routes:
            - receiver: heartbeat
              group_wait: 0s
              group_interval: 5m
              repeat_interval: 1h
              matchers:
                - alertname =~ "Watchdog"
            - receiver: "null"
              matchers:
                - alertname =~ "InfoInhibitor"
            - receiver: discord
              matchers:
                - severity = critical
              continue: true
        inhibit_rules:
          - source_matchers:
              - severity = "critical"
            target_matchers:
              - severity = "warning"
            equal: ["alertname", "namespace"]
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: nginx
        annotations:
          hajimari.io/appName: "Alert Manager"
          hajimari.io/enable: "true"
          hajimari.io/icon: mdi:alert-decagram-outline
        hosts:
          - &host alertmanager.${CLUSTER_DOMAIN}
        tls:
          - hosts:
              - *host
      alertmanagerSpec:
        # replicas: 3
        # podAffinity: hard
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block
              resources:
                requests:
                  storage: 10Mi
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 60m
            memory: 64Mi
    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          multicluster:
            etcd:
              enabled: true
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels: ["node"]
            targetLabel: instance
    kube-state-metrics:
      metricLabelsAllowlist: ["persistentvolumeclaims=[*]"]
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              targetLabel: kubernetes_node
    kubeApiServer:
      enabled: true
    kubeControllerManager:
      enabled: true
      endpoints: ["${K3SJ_IPV4_ADDRESS}", "${K3SM_IPV4_ADDRESS}", "${K3ST_IPV4_ADDRESS}"]
    kubeScheduler:
      enabled: true
      endpoints: ["${K3SJ_IPV4_ADDRESS}", "${K3SM_IPV4_ADDRESS}", "${K3ST_IPV4_ADDRESS}"]
    kubeProxy:
      enabled: true
      endpoints: ["${K3SJ_IPV4_ADDRESS}", "${K3SM_IPV4_ADDRESS}", "${K3ST_IPV4_ADDRESS}"]
    kubeEtcd:
      enabled: true
      endpoints: ["${K3SJ_IPV4_ADDRESS}", "${K3SM_IPV4_ADDRESS}", "${K3ST_IPV4_ADDRESS}"]
      service:
        enabled: true
        port: 2381
        targetPort: 2381
    nodeExporter:
      enabled: false
    prometheus:
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          hajimari.io/appName: Prometheus
          hajimari.io/enable: "true"
          hajimari.io/icon: simple-icons:prometheus
        pathType: Prefix
        hosts:
          - &host prometheus.${CLUSTER_DOMAIN}
        tls:
          - hosts:
              - *host
      prometheusSpec:
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block
              resources:
                requests:
                  storage: 50Gi
        resources:
          requests:
            cpu: 384m
            memory: 4000Mi
          limits:
            cpu: 2
            memory: 8000Mi
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: ${CLUSTER_DOMAIN}/prometheus
                      operator: In
                      values:
                        - "true"
    prometheusOperator:
      resources:
        limits:
          cpu: 200m
          memory: 200Mi
        requests:
          cpu: 100m
          memory: 100Mi
